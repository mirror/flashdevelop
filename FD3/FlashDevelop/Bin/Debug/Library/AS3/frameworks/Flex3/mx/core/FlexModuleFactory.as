package mx.core
{
	import flash.display.LoaderInfo;
	import flash.display.MovieClip;
	import flash.events.ErrorEvent;
	import flash.events.Event;
	import flash.events.IOErrorEvent;
	import flash.events.SecurityErrorEvent;
	import flash.events.TimerEvent;
	import flash.system.ApplicationDomain;
	import flash.text.TextField;
	import flash.text.TextFieldAutoSize;
	import flash.utils.Dictionary;
	import flash.utils.Timer;
	import flash.utils.getDefinitionByName;
	import mx.core.RSLItem;
	import mx.core.RSLListLoader;
	import mx.events.ModuleEvent;
	import mx.resources.IResourceManager;
	import mx.resources.ResourceManager;

include "../core/Version.as"
	/**
	 *  @private
	 */
	public class FlexModuleFactory extends MovieClip implements IFlexModuleFactory
	{
		/**
		 *  @private
		 */
		private static const INIT_STATE : int = 0;
		/**
		 *  @private
		 */
		private static const RSL_START_LOAD_STATE : int = 1;
		/**
		 *  @private
		 */
		private static const APP_LOAD_STATE : int = 2;
		/**
		 *  @private
		 */
		private static const APP_START_STATE : int = 3;
		/**
		 *  @private
		 */
		private static const APP_RUNNING_STATE : int = 4;
		/**
		 *  @private
		 */
		private static const ERROR_STATE : int = 5;
		/**
		 *  @private
		 */
		private static const RSL_LOADING_STATE : int = 6;
		/**
		 *  @private
		 */
		private var rslListLoader : RSLListLoader;
		/**
		 *  @private
		 */
		private var mixinList : Array;
		/**
		 *  @private
		 */
		private var state : int;
		/**
		 *  @private
		 */
		private var appReady : Boolean;
		/**
		 *  @private
		 */
		private var appLoaded : Boolean;
		/**
		 *  @private
		 */
		private var timer : Timer;
		/**
		 *  @private
     *  Track which frame was last processed
		 */
		private var lastFrame : int;
		/**
		 *  @private
		 */
		private var nextFrameTimer : Timer;
		/**
		 *  @private
		 */
		private var errorMessage : String;

		/**
		 *  The RSLs loaded by this FlexModuleFactory before the application 
     *  starts. RSLs loaded by the application are not included in this list.
     * 
     *  Information about preloadedRSLs is stored in a Dictionary. The key is
     *  the RSL's LoaderInfo. The value is the url the RSL was loaded from.
		 */
		public function get preloadedRSLs () : Dictionary;

		/**
		 *  @private
		 */
		public function FlexModuleFactory ();

		private function docFrameListener (event:Event) : void;

		private function extraFrameListener (event:Event) : void;

		/**
		 *  @private
	 *  This method is overridden in the autogenerated subclass.
		 */
		public function create (...params) : Object;

		/**
		 *  @private
		 */
		public function info () : Object;

		/**
		 *  Calls Security.allowDomain() for the SWF associated with this FlexModuleFactory.
     *  plus all the SWFs assocatiated with RSLs preloaded by this FlexModuleFactory.
     *
		 */
		public function allowDomain (...domains) : void;

		/**
		 *  Calls Security.allowInsecureDomain() for the SWF associated with this FlexModuleFactory
     *  plus all the SWFs assocatiated with RSLs preloaded by this FlexModuleFactory.
     *
		 */
		public function allowInsecureDomain (...domains) : void;

		/**
		 *  @inheritDoc
		 */
		public function getDefinitionByName (name:String) : Object;

		/**
		 *  @private
		 */
		private function update () : void;

		/**
		 *  @private
		 */
		public function autorun () : Boolean;

		/**
		 *  @private
		 */
		private function displayError (msg:String) : void;

		/**
		 *  @private
		 */
		private function docFrameHandler (event:Event = null) : void;

		/**
		 *  @private
		 */
		private function installCompiledResourceBundles () : void;

		/**
		 *  @private
		 */
		private function deferredNextFrame () : void;

		/**
		 *  @private
		 */
		private function extraFrameHandler (event:Event = null) : void;

		/**
		 *  @private
		 */
		private function rslCompleteHandler (event:Event) : void;

		/**
		 *  @private
		 */
		private function rslErrorHandler (event:Event) : void;

		/**
		 *  @private
		 */
		private function moduleCompleteHandler (event:Event) : void;

		/**
		 *  @private
		 */
		private function timerHandler (event:TimerEvent) : void;

		/**
		 *  @private
		 */
		private function nextFrameTimerHandler (event:TimerEvent) : void;
	}
}
