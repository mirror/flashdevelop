package mx.controls
{
	import mx.controls.textClasses.TextRange;
	import mx.core.mx_internal;
	import mx.core.IUITextField;
	import mx.core.UITextFormat;

	/// <mx:Panel/>
	public class RichTextEditor extends mx.containers.Panel
	{
		/// <mx:Array/>
		public var fontFamilyArray : Array;
		/// <mx:Array/>
		public var fontSizeArray : Array;
		public var fontFamilyToolTip : String;
		public var fontSizeToolTip : String;
		public var boldToolTip : String;
		public var italicToolTip : String;
		public var underlineToolTip : String;
		public var colorPickerToolTip : String;
		public var alignToolTip : String;
		public var bulletToolTip : String;
		public var linkToolTip : String;
		private var linkTextCommitted : Boolean;
		private var showControlBarChanged : Boolean;
		private var showToolTipsChanged : Boolean;
		private var textChanged : Boolean;
		private var htmlTextChanged : Boolean;
		private var previousTextFormat : TextFormat;
		private var textFormatChanged : Boolean;
		private var lastCaretIndex : int;
		private var invalidateToolBarFlag : Boolean;
		private var firstTime : Boolean;
		/**
		 public function RichTextEditor()
	{
		super();
	}
		 */
		private var _defaultLinkProtocol : String;
		private var _showControlBar : Boolean;
		private var _showToolTips : Boolean;
		private var _text : String;
		private var _htmlText : String;
		/// <mx:TextArea/>
		public var textArea : mx.controls.TextArea;
		/// <mx:ToolBar/>
		public var toolbar : mx.controls.richTextEditorClasses.ToolBar;
		/// <mx:ComboBox/>
		public var fontFamilyCombo : mx.controls.ComboBox;
		/// <mx:ComboBox/>
		public var fontSizeCombo : mx.controls.ComboBox;
		/// <mx:HBox/>
		public var toolBar2 : mx.containers.HBox;
		/// <mx:Button/>
		public var boldButton : mx.controls.Button;
		/// <mx:Button/>
		public var italicButton : mx.controls.Button;
		/// <mx:Button/>
		public var underlineButton : mx.controls.Button;
		/// <mx:ColorPicker/>
		public var colorPicker : mx.controls.ColorPicker;
		/// <mx:ToggleButtonBar/>
		public var alignButtons : mx.controls.ToggleButtonBar;
		/// <mx:Button/>
		public var bulletButton : mx.controls.Button;
		/// <mx:TextInput/>
		public var linkTextInput : mx.controls.TextInput;

		public function get defaultLinkProtocol () : String;
		public function set defaultLinkProtocol (value:String) : void;

		public function get showControlBar () : Boolean;
		public function set showControlBar (value:Boolean) : void;

		public function get showToolTips () : Boolean;
		public function set showToolTips (value:Boolean) : void;

		/**
		 *  The selected text.
		 */
		public function get selection () : TextRange;

		public function get text () : String;
		public function set text (value:String) : void;

		public function get htmlText () : String;
		public function set htmlText (value:String) : void;

		protected function commitProperties () : void;

		protected function measure () : void;

		/**
		 *  @private
		 */
		public function styleChanged (styleProp:String) : void;

		private function setTextStyles (type:String, value:Object = null) : void;

		private function getTextStyles () : void;

		private function setComboSelection (combo:ComboBox, val:String) : void;

		/**
		 *  @private
	 *  This method is called when the user clicks on the textArea, drags
	 *  out of it and releases the mouse button outside the TextArea.
		 */
		private function systemManager_mouseUpHandler (event:MouseEvent) : void;
	}
}
